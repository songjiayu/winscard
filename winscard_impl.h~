

#ifndef WINSCARDIMPL
#define WINSCARDIMPL

#ifdef USR_LINUX  //winscard_impl.c
#include <winscard.h>
#define SCARD_READERSTATE_T SCARD_READERSTATE
#else
#define SCARD_READERSTATE_T SCARD_READERSTATEA
#endif

LONG wine_SCardEstablishContext(DWORD dwScope,
		 LPCVOID pvReserved1, LPCVOID pvReserved2,
		LPSCARDCONTEXT phContext);
LONG wine_SCardIsValidContext(SCARDCONTEXT hContext);
LONG wine_SCardStatus(SCARDHANDLE context, LPSTR szReaderName, LPDWORD pcchReaderLen, LPDWORD pdwState, LPDWORD pdwProtocol, LPBYTE pbAtr, LPDWORD pcbAtrLen);

LONG wine_SCardListReaders(SCARDCONTEXT hContext,
		LPCSTR mszGroups,
		LPSTR mszReaders,
		LPDWORD pcchReaders);

LONG wine_SCardReleaseContext(SCARDCONTEXT context);

LONG   wine_SCardConnect(SCARDCONTEXT hContext,LPCSTR szReader,DWORD dwShareMode,DWORD dwPreferredProtocols,LPSCARDHANDLE phCard,LPDWORD pdwActiveProtocol);

LONG       wine_SCardControl(SCARDHANDLE hCard, DWORD dwControlCode,
		LPCVOID pbSendBuffer, DWORD cbSendLength,
		LPVOID pbRecvBuffer, DWORD cbRecvLength,
		LPDWORD lpBytesReturned);
 LONG wine_SCardTransmit(SCARDHANDLE hCard,
		const SCARD_IO_REQUEST *pioSendPci,
		LPCBYTE pbSendBuffer, DWORD cbSendLength,
		 SCARD_IO_REQUEST *pioRecvPci,
		 LPBYTE pbRecvBuffer, LPDWORD pcbRecvLength);
LONG wine_SCardListReaderGroups(SCARDCONTEXT hContext, LPSTR mszGroups, LPDWORD pcchGroups);

LONG wine_SCardReconnect(SCARDHANDLE hCard,
		DWORD dwShareMode,
		DWORD dwPreferredProtocols,
		DWORD dwInitialization, LPDWORD pdwActiveProtocol);

LONG wine_SCardDisconnect(SCARDHANDLE hCard, DWORD dwDisposition);

LONG wine_SCardBeginTransaction(SCARDHANDLE hCard);

LONG wine_SCardEndTransaction(SCARDHANDLE hCard, DWORD dwDisposition);


LONG wine_SCardFreeMemory(SCARDCONTEXT hContext, LPCVOID pvMem);

LONG wine_SCardCancel(SCARDCONTEXT hContext);

LONG wine_SCardGetAttrib(SCARDHANDLE hCard, DWORD dwAttrId,
	LPBYTE pbAttr, LPDWORD pcbAttrLen);

LONG wine_SCardSetAttrib(SCARDHANDLE hCard, DWORD dwAttrId,
		LPCBYTE pbAttr, DWORD cbAttrLen);


LONG wine_SCardGetStatusChange(SCARDCONTEXT hContext,DWORD dwTimeout,SCARD_READERSTATE_T *rgReaderStates,
		DWORD cReaders);
#endif //WINSCARDIMPL
